name: Test & Deploy

on: [push]

jobs:
  lint:
    name: Lint Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: yarn install

      - name: Run ESLint on UI
        run: yarn workspace @democracy-deutschland/mobile-ui lint:eslint

      - name: Run TSLint on UI
        run: yarn workspace @democracy-deutschland/mobile-ui lint:ts

      - name: Run ESLint on App
        run: yarn workspace app lint:eslint

      - name: Run TSLint on App
        run: yarn workspace app lint:ts

      - uses: stefanzweifel/git-auto-commit-action@v4.1.2
        with:
          commit_message: Action – commit autofix changes

  test-ios:
    name: Test detox ios
    needs: lint
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_11.4.app/Contents/Developer
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: yarn install

      - name: Prepare Detox
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: list devices
        run: applesimutils --list

      - run: pod install
        working-directory: packages/mobile-app/ios

      - name: Encrypt GPG secure files
        run: |
          brew install gnupg@1.4
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.internal.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.alpha.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.beta.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.production.gpg

      - run: npm install -g detox-cli

      - run: FORCE_BUNDLING=true detox build -c ios.sim.debug
        working-directory: packages/mobile-app

      - run: detox test -c ios.sim.debug --record-videos all
        working-directory: packages/mobile-app

      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Detox iOS
          path: packages/mobile-app/artifacts

  test-android:
    name: Test detox Android
    needs: lint
    runs-on: macos-latest
    strategy:
      matrix:
        sdk: [29]
        device: ["Nexus 5X"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: yarn install

      - run: npm install -g detox-cli

      - name: Encrypt GPG secure files
        run: |
          brew install gnupg@1.4
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/my-release-key.keystore.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/src/refactor/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/src/internal/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/src/alpha/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/democracy2-release-key.keystore.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.internal.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.alpha.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.beta.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.production.gpg
          cp packages/mobile-app/.env.internal packages/mobile-app/.env
          cp packages/mobile-app/.env.internal packages/mobile-app/.env.development

      - name: Prepare minSdkVerson for Wix DETOX
        run: npx replace-in-file "minSdkVersion = 16" "minSdkVersion = 18" packages/mobile-app/android/build.gradle packages/mobile-ui/android/build.gradle

      - name: Use specific Java version for sdkmanager to work
        uses: joschi/setup-jdk@v1
        with:
          java-version: "openjdk8"
          architecture: "x64"

      - name: Download Android Emulator Image
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-${{ matrix.sdk }};google_apis;x86"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "${{ matrix.device }}" -k 'system-images;android-${{ matrix.sdk }};google_apis;x86'
          $ANDROID_HOME/emulator/emulator -list-avds

      - name: edit emulator config
        run: |
          echo "hw.ramSize=4096" >> ~/.android/avd/emu.avd/config.ini
          echo "vm.heapSize=576" >> ~/.android/avd/emu.avd/config.ini
          echo "disk.dataPartition.size=2048M" >> ~/.android/avd/emu.avd/config.ini
          echo "fastboot.forceColdBoot=no" >> ~/.android/avd/emu.avd/config.ini
          echo "fastboot.forceFastBoot=yes" >> ~/.android/avd/emu.avd/config.ini
          echo "saveOnExit=true" >> ~/.android/avd/quickbootChoice.ini

      - run: |
          cat ~/.android/avd/emu.avd/config.ini
          cat ~/.android/avd/quickbootChoice.ini

      - name: Build Test
        run: detox build -c android.emu.internal.debug
        working-directory: packages/mobile-app
        env:
          ANDROID_PASS: ${{ secrets.ANDROID_PASS }}

      - name: Run Test
        run: |
          ./e2e/android-anr-fix.sh & 
          yarn start & 
          detox test -c android.emu.internal.debug --record-videos all
        working-directory: packages/mobile-app

      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Detox Android (${{ matrix.sdk }} - ${{ matrix.device }})
          path: packages/mobile-app/artifacts

  build-ios:
    name: Build ios
    needs: [test-ios, test-android]
    if: github.ref == 'refs/heads/internal' || github.ref == 'refs/heads/alpha' || github.ref == 'refs/heads/beta'
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode_11.4.app/Contents/Developer
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: yarn install

      - run: pod install
        working-directory: packages/mobile-app/ios

      # install fastlane dependencies
      - run: gem install bundler:1.17.3

      - name: Encrypt GPG secure files
        run: |
          brew install gnupg@1.4
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.internal.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.alpha.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.beta.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.production.gpg

      - name: Fix match prompt issue
        run: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Fastlane
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: "ios beta"
          subdirectory: "packages/mobile-app/ios"
        env:
          TRAVIS_BRANCH: ${{ github.ref }}
          TRAVIS: "true"
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

  build-andriod:
    name: Build Android
    needs: [test-ios, test-android]
    if: github.ref == 'refs/heads/internal' || github.ref == 'refs/heads/alpha' || github.ref == 'refs/heads/beta'
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - run: yarn install

      - run: sudo gem install bundler:1.17.3

      - name: Encrypt GPG secure files
        run: |
          brew install gnupg@1.4
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/my-release-key.keystore.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/src/refactor/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/src/internal/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/src/alpha/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/app/google-services.json.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/android/democracy2-release-key.keystore.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.internal.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.alpha.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.beta.gpg
          echo ${{ secrets.SUPER_SECRET_PASSWORD }} | gpg1 --no-tty --passphrase-fd 0 packages/mobile-app/.env.production.gpg

      - name: Prepare Fastlane metadata
        if: github.ref == 'refs/heads/internal' || github.ref == 'refs/heads/alpha' || github.ref == 'refs/heads/beta'
        run: ditto fastlane/metadata/${GITHUB_REF:11} fastlane/metadata/android/de-DE/
        working-directory: packages/mobile-app/android

      - name: Fastlane
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: "android internal"
          subdirectory: "packages/mobile-app/android"
        env:
          TRAVIS_BRANCH: ${{ github.ref }}
          TRAVIS: "true"
          ANDROID_PASS: ${{ secrets.ANDROID_PASS }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
